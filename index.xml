<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Signal&#39;s Blog</title>
    <link>https://signalyu.github.io/</link>
    <description>Recent content on Signal&#39;s Blog</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>EN</language>
    <lastBuildDate>Tue, 03 Dec 2024 20:32:22 +0800</lastBuildDate>
    <atom:link href="https://signalyu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mottos</title>
      <link>https://signalyu.github.io/posts/3-humanities/personal-growth/mottos/1-mottos/</link>
      <pubDate>Wed, 13 Nov 2024 21:25:35 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/personal-growth/mottos/1-mottos/</guid>
      <description>2024 Be cautious in both speech and action.
First things first.
Avoid living a life of suffering.
Opportunity favors the prepared mind.
Focus on your own matters, respect others&amp;rsquo; choices, and live in harmony with destiny.
Life is the process of cultivating your soul.
Think first, act later.
Speak less of what&amp;rsquo;s unnecessary, do less of what&amp;rsquo;s pointless, and waste less energy on what&amp;rsquo;s unimportant.
In times of peace, prepare for challenges.</description>
    </item>
    <item>
      <title>Concepts Explained</title>
      <link>https://signalyu.github.io/posts/3-humanities/personal-growth/concepts/1-concepts-explained/</link>
      <pubDate>Tue, 03 Dec 2024 20:32:22 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/personal-growth/concepts/1-concepts-explained/</guid>
      <description>2024-12-03: Stress, Worry, Anxiety, Depression Stress refers to the body&amp;rsquo;s physical or psychological response to external presures or demands. Worry is a mental process where a person fixates on potential problems or negative outcome in the future. Anxiety is a feeling of unease, nervousness, or fear, often related to an imminent event or uncertain outcome. Depression is a mood disorder marked by persistent feelings of sadness, a lack of interest in previously enjoyable activities, and a diminished sense of energy and motivation.</description>
    </item>
    <item>
      <title>Coding Problem Set</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/coding-problems/1-cocoding-problem-set/</link>
      <pubDate>Mon, 02 Dec 2024 15:15:55 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/coding-problems/1-cocoding-problem-set/</guid>
      <description>Queue 银行插队 SHOW PROBLEM 一、题目描述
某银行将客户分为了若干个优先级，1级最高，5级最低。当客户到达银行时，优先级高的人可以随时插队到优先级低的人的前面。
现在给定一系列的客户到达和办理业务的时间序列，请你每次银行办理业务时输出客户的编号。
如果有多个优先级相同且最高的客户，则按照到达顺序进行办理。
二、输入描述
第一行是一个正整数 n（1 ≤ n ≤ 500），表示输入序列中的事件数量。 接下来的 n 行每行第一个字符为 a 或 p： 当字符为 a 时，后面跟着两个正整数 num 和 x，表示到达的客户编号 num 和优先级 x。 当字符为 p 时，表示当前优先级最高的客户去办理业务。 三、输出描述
对于每个 p 类型的事件，输出一行，仅包含一个正整数 num，表示办理业务的客户编号。
四、测试用例
测试用例 1
输入:
4 a 1 3 a 2 2 a 3 2 p 输出:
2 说明:
客户 1 到达，优先级为 3。 客户 2 和客户 3 到达，优先级为 2。 第一次 p 会办理客户 2，因为客户 2 和客户 3 优先级相同，但是客户 2 先到达。 测试用例 2</description>
    </item>
    <item>
      <title>Coding Patterns for Interview Questions</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/patterns/1-coding-patterns-for-interview-questions/</link>
      <pubDate>Mon, 02 Dec 2024 10:15:04 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/patterns/1-coding-patterns-for-interview-questions/</guid>
      <description>Simple Two Pointers The Simple Two Pointers technique is commonly used to solve problems involving sorted array, where a set of elements needs to be found that satisfy certain constrains. This approach is efficient in scenarios such as finding a pair that sums to a target or reversing an array or string. In the two simple two pointers technique, two pointers &amp;ndash; typically labeled &amp;ldquo;left&amp;rdquo; and &amp;ldquo;right&amp;rdquo; &amp;ndash; are initialized and move in a specific direction based on the problem&amp;rsquo;s requirements.</description>
    </item>
    <item>
      <title>Database Design Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-notes/</link>
      <pubDate>Fri, 22 Nov 2024 21:07:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-notes/</guid>
      <description>Introduction to Databases A database is a collection of data that is stored, managed, and accessed electronically. It typically contains one or more tables, which resemble Excel or Google sheets, with data organized into rows and columns. As the number of tables grows, managing the database can become complex, making it essential to design a scalable and maintainable strucutre.
Databases can be broadly categorized into two types: Relational database, primarily used for real-time data updates and transactions, and data warehouse, optimized for data analysis and reporting purposes.</description>
    </item>
    <item>
      <title>Photography Notes</title>
      <link>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</link>
      <pubDate>Mon, 18 Nov 2024 20:37:01 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</guid>
      <description>Exposure Exposure refers to the light that reaches the camera&amp;rsquo;s sensor to create an image. It is controlled by three fundamental settings known as the Exposure Triangle: Aperture, Shutter Speed, and ISO.
Aperture The aperture (f-stop) is the opening in the camera lens that controls how much light enters. A wider aperture (e.g., f/2.8) allows more light to pass through, brightening the image and creating a shallow depth of field, which results in a blurry background.</description>
    </item>
    <item>
      <title>Spring Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework/backend/spring/1-spring-notes/</link>
      <pubDate>Mon, 18 Nov 2024 15:44:50 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework/backend/spring/1-spring-notes/</guid>
      <description>Core Concepts Loose Coupling Loose Coupling is a design principle that aims to reduce the dependencies between components within a system.
Inversion of Control (IoC) Inversion of Control is a design principle where the control of object creation and lifecycle management is transferred from the application code to an external container or framework.
Dependency Injection (DI) Dependency Injection is a design pattern commonly used in object-oriented programming, where the dependecies of a class are provided externally rather than being created within the class itself.</description>
    </item>
    <item>
      <title>Vue Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework/front-end/vue/1-vue-notes/</link>
      <pubDate>Sat, 16 Nov 2024 20:53:48 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework/front-end/vue/1-vue-notes/</guid>
      <description>Virtual DOM A Virtual DOM is a lightweight, in-memory representation of the real DOM. Each Node in the Virtual DOM is represented as a plain JavaScript object with properties describing the element, its attributes, and its children. The Virtual DOM will be updated whenever an application&amp;rsquo;s state changes. It minimizes real DOM updates by batching changes and applying them through an optimized process. --- title: Virtual DOM --- graph TD B[&#34;</description>
    </item>
    <item>
      <title>Data Structure &amp; Algorithms</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/algorithms/1-data-structure-and-algorithms/</link>
      <pubDate>Thu, 14 Nov 2024 20:29:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/algorithms/1-data-structure-and-algorithms/</guid>
      <description>Recursion Recursion is a programming technique where a function repeatedly calls itself until it reaches a base case, whcih stops the recursion and allows it to return a result. It is a way of breaking down complex problems into smaller, simpler subproblems that are eaiser to solve.
Head Recursion Head Recursion is a type of recursion where a function makes its recursive call first, immediately after checking the base case, and performs all other operations only after the recursive call returns.</description>
    </item>
    <item>
      <title>Design Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</link>
      <pubDate>Tue, 12 Nov 2024 14:38:17 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</guid>
      <description>1. Solid Principle 1.1 Single Responsibility Principle A class should have only one reason to change, meaning each class should focus on a single functionality or responsibility.
SHOW CODE Single Responsibility Principle import java.io.IOException; import java.util.*; import java.util.regex.*; import com.fasterxml.jackson.databind.ObjectMapper; /** * 1. User class is only used to represent entity. * 2. UserValidator class is solely responsible for validating user objects. * 3. Store class is only used to manage user objects storage.</description>
    </item>
    <item>
      <title>Java Programming Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-notes/</link>
      <pubDate>Fri, 08 Nov 2024 11:36:53 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-notes/</guid>
      <description>Generics SHOW CODE Java public class Test { public static void main(String[] args) { List&amp;lt;Integer&amp;gt; intList = List.of(1, 2, 3); // Integer 是 Number 的子类 processItems(&#34;Hello Integer!&#34;, intList); // Double 是 Number 的子类 processItems(&#34;Hello, Double!&#34;, List.of(1.1, 2.2, 3.3)); } // 定义泛型方法，T 是任何类型，V 限制为 Number 或其子类 private static &amp;lt;T, V extends Number&amp;gt; void processItems(T item, List&amp;lt;V&amp;gt; nums) { System.out.println(item); for (V num : nums) { System.out.println(&#34;num: &#34; + num); } } /** * ?</description>
    </item>
  </channel>
</rss>
