<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Signal&#39;s Blog</title>
    <link>https://signalyu.github.io/posts/</link>
    <description>Recent content in Posts on Signal&#39;s Blog</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>EN</language>
    <lastBuildDate>Tue, 15 Apr 2025 11:03:32 +0800</lastBuildDate>
    <atom:link href="https://signalyu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Japanese-Language Proficiency Test — N1</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/japanese/1-jlpt-n1/</link>
      <pubDate>Sat, 15 Mar 2025 16:56:57 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/japanese/1-jlpt-n1/</guid>
      <description>リスニング 音楽 ブルー・ライト・ヨコハマ Your browser does not support the audio element. 歌詞見せて 街（まち『き』）の灯（あか）りが　とてもきれいね
The city lights are so beautiful
城市的灯光如此美丽
ヨコハマ　ブルー・ライト・ヨコハマ
Yokohama, Blue Light Yokohama
横滨，蓝色之光横滨
あなたと二人　幸せよ
With you, I&amp;rsquo;m so happy
与你在一起 多么幸福
いつものように　愛のことばを
As always, whisper words of love
像往常一样 请对我说爱的蜜语
ヨコハマ　ブルー・ライト・ヨコハマ
Yokohama, Blue Light Yokohama
横滨，蓝色之光横滨
私にください　あなたから
Please say them to me, my darling
请对我说 亲爱的
歩いても　歩いても
No matter how far we walk</description>
    </item>
    <item>
      <title>International English Language Testing System — 7.0</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/english/1-ielts/</link>
      <pubDate>Sat, 15 Mar 2025 16:56:24 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/english/1-ielts/</guid>
      <description>Speaking Reading Writing Listening Podcast 1. Order Food in Restaurant https://youtu.be/_izDbJ45Q5I SHOW NOTES I&#39;m still working on it. This sentence expresses that an action is ongoing and not yet completed. It also suggests that more time is needed to finish it. Did you finish reading? — I&amp;rsquo;m still working on it. Did you fix my car? — I&amp;rsquo;m still working on it. Coke and Fries This refers to a popular combination of fast food: Coca-cola and French Fries.</description>
    </item>
    <item>
      <title>Red Hat Enterprise Linux</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/linux/1-red-hat-enterprise-linux/</link>
      <pubDate>Tue, 15 Apr 2025 11:03:32 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/linux/1-red-hat-enterprise-linux/</guid>
      <description>1. Introduction to Linux SHOW CONTENTS Open Source refers to software whose source code is freely available to the public for anyone to view, modify, and distribute. It encourages coolaboration, transparency, and community-driven improvements.
Open Source Licenses are legal agreements that define how software can be used, modified, and distributed. There are two main types of Copyleft and Permissive.
Copyleft licenses require that any modified versions of the software also be open source, under the same terms as the original.</description>
    </item>
    <item>
      <title>Docker</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/devops/docker/1-docker/</link>
      <pubDate>Mon, 14 Apr 2025 09:37:42 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/devops/docker/1-docker/</guid>
      <description>Introduction to Docker SHOW CONTENTS Docker was developed to address the challenges of software deployment across various environments by providing a lightweight, consistent, and portable solution. Prior to Docker, developers often faced issues like &amp;ldquo;it works on my machine, but not in production,&amp;rdquo; caused by inconsistencies in dependencies, libraries, and configurations. Docker resolves this by containerizing applications, ensuring they run uniformly across any infrastructure. Its primary goal is to simplify development, testing, and deployment by encapsulating applications and their dependencies into isolated, reproducible containers.</description>
    </item>
    <item>
      <title>Python Programming</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/python/1-python-programming/</link>
      <pubDate>Sat, 29 Mar 2025 16:46:34 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/python/1-python-programming/</guid>
      <description>Function Function arguments refer to data passed to the function. In python, there four main types of arguments: positional arguments, keyword arguments, default arguments, and variable length arguments.
Positional arguments are passed to a function in a specific order, and the values are assigned to parameters based on their position. Keyword arguments are passed to a function by explicitly specifying the parameter name. Any keyword arguments must be put after the last positional argument.</description>
    </item>
    <item>
      <title>Cisco Certified Networking Associate (CCNA)</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/computer-networking/1-ccna/</link>
      <pubDate>Sat, 15 Mar 2025 16:57:09 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/computer-networking/1-ccna/</guid>
      <description>1. Introduction to CCNA Exam Exam Topics CCNA Exam Topics Exam Instructions Cisco Exam Tutorial Question Types YOU CAN&amp;rsquo;T GO BACK AFTER ANSWERING OR SKIPPING A QUESTION.
CCNA Question Types Online Testing A PRIVATE and QUITE place for AT LEAST 2 HOURS must be needed.
Online Testing Cisco Packet Tracer Installation Cisco Packet Tracer Installation (Login First) Schduling and Taking the Exam Scheduling And Taking the Exam Exam Prep: Binary Game Binary Game 2.</description>
    </item>
    <item>
      <title>System Design</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/system-design/1-system-design/</link>
      <pubDate>Fri, 27 Dec 2024 04:32:42 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/system-design/1-system-design/</guid>
      <description>Introduction to System Design SHOW CONTENTS System Design is the process of defining the architecture, components, modules, interfaces, and data for a system to fulfill specific business requirements, while ensuring scalability, maintainability, and performance.
Load Balancing SHOW CONTENTS In System Design, Load Balancing refers to the practice of distributing incoming network traffic or workload across multiple servers or resources to optimize resource use and ensure high availability.
To fullly leverage scalability and redundency, load balancing can occur at different layers: between user and the web server, between web server and an internal platform serve, between internal platform server and database as illustrated in the following image:</description>
    </item>
    <item>
      <title>Database Management Systems</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/2-database-management-system/</link>
      <pubDate>Wed, 25 Dec 2024 10:20:09 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/2-database-management-system/</guid>
      <description>Introduction to DBMS A Database Management System (DBMS) is software that provides an interface for users to interact with databases. It enables the management, storage, and manipulation of data within databases. DBMS can be broadly classified into two main types: Relational DBMS and NoSQL DBMS.
In a Relational DBMS, data is stored in structured tables and is manipulated using SQL (Structured Query Language). Examples of relational DBMS inlcude MySQL, Oracle, and PostgreSQL.</description>
    </item>
    <item>
      <title>Development Manual</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/development-manual/1-development-manual/</link>
      <pubDate>Tue, 24 Dec 2024 16:03:23 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/development-manual/1-development-manual/</guid>
      <description>IDEA Postfix Completion SHOW CONTENTS Postfix completion allows writing code faster by adding expressions after a variable or value. It can be customized to suit specific coding needs.
&amp;#34;Hello&amp;#34;.var → String s = &amp;#34;Hello&amp;#34;; Live Templates SHOW CONTENTS Live Templates are predefined code snippets that can be inserted quickly using a shortcut. It can be customized to suit specific coding needs.
sout → System.out.println(); Keyboard Shortcuts SHOW CONTENTS Show Hint: Alt + Enter Show Parameter Info: Ctrl + P Surround with Selected Code Block: Ctrl + Alt + J Start a New Line: Shift + Enter Start a New Line Before Current: Ctrl + Alt + Enter Show Live Template: Ctrl + J Rename in Batch: Shift + F6 Extract Method: Ctrl + Alt + M Override Methods: Ctrl + O Implement Methods: Ctrl + I Optimize Imports: Ctrl + Alt + O View Source Code: Ctrl + N → Ctrl + F12 Go to Previous Edit Location: Ctrl + Alt + ← Go to Next Edit Location: Ctrl + Alt + → Show Inheritance Tree: Ctrl + H Show Quick Documentation: Ctrl + Q Show UML Diagram: Ctrl + Alt + U Go to Specified Line: Ctrl + G → Enter line number Go to Variable Definition: Ctrl + Alt + B Expand Code Block: Ctrl + Shift + + Collapse Code Block: Ctrl + Shift + - Debug Method Breakpoints SHOW CONTENTS Method breakpoints are a type of debugger breakpoint that pauses program execution when a specific method or function is entered or exited.</description>
    </item>
    <item>
      <title>Asynchronous Messaging</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</link>
      <pubDate>Fri, 20 Dec 2024 13:57:02 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</guid>
      <description>Synchronous Messaging VS. Asynchronous Messaging Synchronous Messaging and Asynchronous Messaging are two commnication paradigms used in distributed systems. In synchronous messaging, the sender will not continue executing until it receives the acknowledged message from the receiver. This paradigm is commonly used in situations that require immediate feedback to continue operations, such as payments or transaction processing.
The advantages of this paradigm include ease of implementation and usefulness in situations where immediate feedback is needed.</description>
    </item>
    <item>
      <title>Multithreading &amp; Concurrency</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</link>
      <pubDate>Wed, 11 Dec 2024 12:13:32 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</guid>
      <description>Introduction to Multithreading Program, Process, and Thread A program is a static set of instructions that stores on a disk. A process is an instance of a program that is currently being executed by the operating system. A thread is a small unit of process that can be scheduled and executed by the operating system. In simpler terms, a program is the code, a process is the excution of the code, a thread is a unit of execution within a process.</description>
    </item>
    <item>
      <title>Junit &amp; Mockito Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</link>
      <pubDate>Sat, 07 Dec 2024 01:26:33 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</guid>
      <description>JUnit assertEquals In JUnit, assertEquals is a method used to check if the expected value and the actual value are equal in unit tests.
SHOW CODE Java import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class UnitTest { @Test void addition() { Calculator calculator = new Calculator(); int result = calculator.add(1, 1); assertEquals(2, result, &#34;The result of 1 + 1 should be 2&#34;); } } assertTure &amp;amp; assertFalse In JUnit, the assertTrue and the assertFalse methods are used to validate boolean expressions in unit tests.</description>
    </item>
    <item>
      <title>Coding Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/2-coding-patterns/</link>
      <pubDate>Mon, 02 Dec 2024 10:15:04 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/2-coding-patterns/</guid>
      <description>Simple Two Pointers The Simple Two Pointers technique is commonly used to solve problems involving sorted array, where a set of elements needs to be found that satisfy certain constrains. This approach is efficient in scenarios such as finding a pair that sums to a target or reversing an array or string. In the two simple two pointers technique, two pointers &amp;ndash; typically labeled &amp;ldquo;left&amp;rdquo; and &amp;ldquo;right&amp;rdquo; &amp;ndash; are initialized and move in a specific direction based on the problem&amp;rsquo;s requirements.</description>
    </item>
    <item>
      <title>Database Design</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-design/</link>
      <pubDate>Fri, 22 Nov 2024 21:07:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-design/</guid>
      <description>Introduction to Databases A database is a collection of data that is stored, managed, and accessed electronically. It typically contains one or more tables, which resemble Excel or Google sheets, with data organized into rows and columns. As the number of tables grows, managing the database can become complex, making it essential to design a scalable and maintainable strucutre.
Databases can be broadly categorized into two types: Relational database, primarily used for real-time data updates and transactions, and data warehouse, optimized for data analysis and reporting purposes.</description>
    </item>
    <item>
      <title>Photography</title>
      <link>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</link>
      <pubDate>Mon, 18 Nov 2024 20:37:01 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</guid>
      <description>Exposure in Photography Exposure SHOW CONTENTS Exposure refers to the light that reaches the camera&amp;rsquo;s sensor to create an image. It is controlled by three fundamental settings known as the Exposure Triangle: Aperture, Shutter Speed, and ISO.
Aperture SHOW CONTENTS The aperture (f-stop) is the opening in the camera lens that controls how much light enters. A wider aperture (e.g., f/2.8) allows more light to pass through, brightening the image and creating a shallow depth of field, which results in a blurry background.</description>
    </item>
    <item>
      <title>Spring</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</link>
      <pubDate>Mon, 18 Nov 2024 15:44:50 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</guid>
      <description>Core Concepts Loose Coupling Loose Coupling is a design principle that aims to reduce the dependencies between components within a system.
Inversion of Control (IoC) Inversion of Control is a design principle where the control of object creation and lifecycle management is transferred from the application code to an external container or framework.
Dependency Injection (DI) Dependency Injection is a design pattern commonly used in object-oriented programming, where the dependecies of a class are provided externally rather than being created within the class itself.</description>
    </item>
    <item>
      <title>Data Structure &amp; Algorithms</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/1-data-structure-and-algorithms/</link>
      <pubDate>Thu, 14 Nov 2024 20:29:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/1-data-structure-and-algorithms/</guid>
      <description>Recursion Recursion is a programming technique where a function repeatedly calls itself until it reaches a base case, whcih stops the recursion and allows it to return a result. It is a way of breaking down complex problems into smaller, simpler subproblems that are eaiser to solve.
Head Recursion Head Recursion is a type of recursion where a function makes its recursive call first, immediately after checking the base case, and performs all other operations only after the recursive call returns.</description>
    </item>
    <item>
      <title>Design Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</link>
      <pubDate>Tue, 12 Nov 2024 14:38:17 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</guid>
      <description>1. Solid Principle 1.1 Single Responsibility Principle A class should have only one reason to change, meaning each class should focus on a single functionality or responsibility.
SHOW CODE Single Responsibility Principle import java.io.IOException; import java.util.*; import java.util.regex.*; import com.fasterxml.jackson.databind.ObjectMapper; /** * 1. User class is only used to represent entity. * 2. UserValidator class is solely responsible for validating user objects. * 3. Store class is only used to manage user objects storage.</description>
    </item>
    <item>
      <title>Java Programming</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming/</link>
      <pubDate>Fri, 08 Nov 2024 11:36:53 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming/</guid>
      <description>Enum In Java, an enum (short for &amp;ldquo;enumeration&amp;rdquo;) is used to define a collection of constants, such as days of the week or months of the year. An enum provides a type-safe way to handle constant values, and it can be used in a switch statement or for comparison using ==. Compared to a final constant in Java, an enum can contain fields, methods, and constructors. The values() method is used to retrive all the constants in an enum, and the valueOf() method is used to convert a string into an enum constant.</description>
    </item>
  </channel>
</rss>
