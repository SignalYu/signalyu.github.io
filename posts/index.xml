<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Signal&#39;s Blog</title>
    <link>https://signalyu.github.io/posts/</link>
    <description>Recent content in Posts on Signal&#39;s Blog</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>EN</language>
    <lastBuildDate>Wed, 24 Sep 2025 22:17:01 +0800</lastBuildDate>
    <atom:link href="https://signalyu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Japanese-Language Proficiency Test — N1</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/japanese/1-jlpt-n1/</link>
      <pubDate>Sat, 15 Mar 2025 16:56:57 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/japanese/1-jlpt-n1/</guid>
      <description>リスニング 音楽 ブルー・ライト・ヨコハマ Your browser does not support the audio element. 歌詞見せて 街（まち『き』）の灯（あか）りが　とてもきれいね
The city lights are so beautiful
城市的灯光如此美丽
ヨコハマ　ブルー・ライト・ヨコハマ
Yokohama, Blue Light Yokohama
横滨，蓝色之光横滨
あなたと二人　幸せよ
With you, I&amp;rsquo;m so happy
与你在一起 多么幸福
いつものように　愛のことばを
As always, whisper words of love
像往常一样 请对我说爱的蜜语
ヨコハマ　ブルー・ライト・ヨコハマ
Yokohama, Blue Light Yokohama
横滨，蓝色之光横滨
私にください　あなたから
Please say them to me, my darling
请对我说 亲爱的
歩いても　歩いても
No matter how far we walk</description>
    </item>
    <item>
      <title>International English Language Testing System — 7.0</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/english/1-ielts/</link>
      <pubDate>Sat, 15 Mar 2025 16:56:24 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/english/1-ielts/</guid>
      <description>Speaking Reading Writing Listening Music Perfect Your browser does not support the audio element. You Are Not Alone Your browser does not support the audio element. Every Breath You Take Your browser does not support the audio element. Unstoppable Your browser does not support the audio element. Magic in the Air Your browser does not support the audio element. AI World Cup Song Your browser does not support the audio element.</description>
    </item>
    <item>
      <title>2025 Reading Notes</title>
      <link>https://signalyu.github.io/posts/3-humanities/personal-growth/reading-notes/2025-reading-notes/</link>
      <pubDate>Wed, 24 Sep 2025 22:17:01 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/personal-growth/reading-notes/2025-reading-notes/</guid>
      <description>2025.09.24: 角色化与人的五个层级 SHOW NOTES 人之所以被“角色化”，是为了便于管理与协作。角色意味着规则：当一个人处在某个角色中，就需要遵循相应的行为准则和处事态度。这些规则使他人的预判更为可靠，从而提升组织的效率。角色化的过程本质上就是教育。它是一把双刃剑——一方面带来秩序与效率，另一方面也设置了边界与束缚，容易让人忽视甚至遗忘真实的自我。
人的五个层级
感知层：第一印象。 角色层：职位或社会身份。 资源结构：财富、人脉、精神资源。 能力圈：管理、沟通、专业技能等。 存在感知层：对自我存在意义的定义。 基于感知层和角色层的社交，多停留在浅表层次，例如寒暄或日常工作问答。当角色发生变动（如跳槽），如果资源结构和能力圈并未提升，这种变化的价值有限。存在感知层才是一个人的核心，体现着“我想成为怎样的存在”，同时也关乎使命感。被动的人生是在角色框架下度日，主动的人生则意味着超越角色，回到更真实的自我。
2025.10.01: 五个理解层次 SHOW NOTES 理解层次可分为五个递进的层次：环境、行为、能力、BVR 和身份。
环境层的人容易把问题归因于外部因素，被称为“怨妇型”。比如，工作不顺利时抱怨领导是傻屄，买不起房时责怪炒房团推高了房价。
行为层的人则是“行动派”，他们相信“只要足够努力，事情就会好转”，因此在遭遇挫折时往往检讨自己不够用功，但努力虽是必要条件，却不是成功的充分条件。
能力层的人被称为“战术家”，他们相信“方法总比问题多”，会从提升自身技能入手来解决问题。例如，人际关系不好时，他们会归因于沟通能力欠缺并去学习情商书籍；升任经理后团队业绩下滑，他们会认为是管理能力不足而去读 MBA。但如果方向错了，再优秀的能力也可能南辕北辙。
BVR 层次的人则是“战略家”，他们先回探寻问题背后的根源，而不是急于下结论。比如线下门店生意下滑，能力层可能归因于房租上涨、团队士气低落或者电商竞争激烈，而 BVR 层会进一步追问：互联网时代交易结构已改变，线上购物之所以便宜是因为去掉了中间环节，价值传递效率更高；相对的，线下店的优势在于用户体验更强。基于此，他们可能提出发展体验经济、砍掉中间环节降低成本，或转型线上等方案。
最高层是身份层，涉及“我是谁”。身份不同于角色，它是主动选择的。处在身份层的人会以“因为我是XXX，所以我会XXX”来思考。身份决定了一个人的BVR，进而影响价值判断和选择。比如，当面临多种解决方案时，不同身份的人会做出完全不同的决策。
简而言之，身份决定方向，价值观决定选择，能力和行为决定执行，而环境知识外部条件。</description>
    </item>
    <item>
      <title>亚马逊运营手册</title>
      <link>https://signalyu.github.io/posts/2-social-science/trade/4-amazon-operation-manual/</link>
      <pubDate>Sun, 06 Jul 2025 14:59:36 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/2-social-science/trade/4-amazon-operation-manual/</guid>
      <description>关键词搜集 在进行关键词搜集时，首先要注意邮编地址的设定，这些因素会直接影响关键词的准确性，因此在收集关键词时需要适时切换邮编地址以获取更精确的数据。同时，控制长尾关键词的长度也很重要，建议将关键词控制在5个词以内，因为关键词越长，其对应的搜索结果越少。其次，可以利用第三方关键词分析工具（如“西柚”）通过输入ASIN进行关键词反查分析，从而发现潜在的高效关键词。此外，通过ABA品牌分析工具输入主关键词，可以获得更多有价值的关键词信息。在广告层面，可以**根据广告搜索词的数据（如曝光量，点击率等）**来分析哪些词语表现较好，进一步优化关键词策略。最后，还可以参考竞品链接的标题，从中提取关键词，以丰富和完善自身的关键词库。
关键词矩阵搭建 关键词矩阵主要是通过分析与核心关键词相关的各级长尾关键词，来评估其在市场中的搜索热度和竞争强度（SPR值）。
核心词为最基础的关键词，如“tunic”，具有最高的搜索量，同时也是最具有竞争力的词，SPR值较高（68），意味着需要较多销量才能获得首页展示。
关键词 月搜索量 SPR tunic 27,211 68 一级长尾词是在核心词基础上加一层修饰，如“tunic women”或“tunic half-sleeve”，搜索量较高但 SPR 值下降，竞争略低。
关键词 月搜索量 SPR tunic women 12,333 34 tunic half sleeve 5,448 — 二级长尾词进一步细化用户搜索意图，如“tunic women summer”或“tunic women half sleeve”，搜索量略低但更具针对性，SPR值继续降低。
关键词 月搜索量 SPR tunic women summer 10,543 31 tunic women half sleeve 5,243 18 三级长尾词是最精准的用户意图表达，如“tunic women summer oversize”或“tunic women half-sleeve loose”，虽然搜索量最低，但竞争最小（SPR最低），更适合中小卖家进行精准投放。
关键词 月搜索量 SPR tunic women summer oversize 3,322 18 tunic women half-sleeve loose 819 8 SPR（Sales per Ranking）表示关键词要达到首页所需的订单数。例如，SPR=8，意味着需在8天内出8单，才能使该词排到首页。SPR越高，说明该词的竞争越激烈。</description>
    </item>
    <item>
      <title>Cross Border Electronical Commerce</title>
      <link>https://signalyu.github.io/posts/2-social-science/trade/2-cross-border-electronical-commerce/</link>
      <pubDate>Tue, 03 Jun 2025 23:33:34 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/2-social-science/trade/2-cross-border-electronical-commerce/</guid>
      <description>亚马逊开店前期准备 注册亚马逊店铺的准备工作 六种注册资料 SHOW CONTENTS 在注册公司申请亚马逊店铺时，首先需注意营业执照的名称和经营范围。建议在公司名称后缀中加入“贸易”“销售”或“网络”等与电商相关的词汇，例如“某某网络有限公司”或“某某销售有限公司”。同时，经营范围应提前涵盖与亚马逊相关的业务，如批发、零售贸易、电子商务等，以避免后续资料审核的麻烦。此外，法人身份证的姓名必须与营业执照一致，且身份证需在有效期内（建议剩余有效期至少6个月），提交的身份证扫描件应为彩色且完整无缺角。
注册亚马逊店铺还需准备外币信用卡，如Visa或MasterCard，用于支付店铺费用。邮箱和手机号需确保从未注册过亚马逊卖家或买家账户，且邮箱品牌不限。电脑和网络环境也必须是“干净的”，即未用于注册过亚马逊账户，同时需避免频繁切换IP，使用亚马逊卖家APP时不可连接公共WiFi。
在收款工具方面，亚马逊店铺支持第三方收款（如PingPong、Payoneer、WorldFirst等）、亚马逊官方收款以及传统海外银行账户收款。国内卖家常用第三方收款服务，而亚马逊官方全球收款服务允许卖家直接以人民币接收回款至国内银行账户。需注意的是，收款账户的确定和注册应在亚马逊店铺注册之前完成，以确保顺利设置收款方式。
其他运营工具的准备 SHOW CONTENTS 其他运营工具的准备主要包括注册商标、头程运输和美工制图服务。
注册商标： 商标具有地域性，注册后主要有三个优势： 防止跟卖：有效阻止他人跟卖产品。 UPC豁免权：未进行品牌备案的商品在上架时需提供UPC/EAN编码，而备案后可以申请豁免，无需再输入UPC。 解锁更多运营工具：只有完成品牌备案的店铺才能使用亚马逊后台的推广功能（如A+页面、品牌广告等）。
需要注意的是，商标注册周期较长（美国需8～10个月，欧洲约10个月），建议在注册店铺前就开始申请，以便运营后尽快完成品牌备案。 头程运输：头程运输指商品从中国海关运送至亚马逊FBA仓库的物流流程。在正式运营前，应提前筛选可靠的头程服务商（如海运、空运、快递等），以确保后续发货高效顺畅，避免因物流问题影响库存和销售。 美工制图服务：商品Listing的优化直接影响转化率，其中图片质量尤为关键。在选定商品后，需提前联系专业美工团队或设计师，制作符合亚马逊要求的高质量主图、副图和A+页面图片，以提升产品吸引力和竞争力。 注册准备阶段的几个重要的注意事项 SHOW CONTENTS 注册准备阶段的几个重要的注意事项包括定期报税、谨慎选择销售计划和提前准备合规账单。
新公司需做好记账报税工作：注册亚马逊店铺的公司必须按时进行工商申报和税务申报，否则可能被列为经营异常，甚至导致营业执照被注销。若亚马逊后续审核店铺时发现营业执照已注销，审核将无法通过。因此，即使公司暂无收入，也要定期进行税务零申报，并按时完成每年6月的工商年检，确保公司维持正常经营状态。 谨慎选择销售计划，避免随意降级：亚马逊提供两种销售计划：个人销售计划和专业销售计划（以美国站为例）。建议直接选择专业销售计划（月费39.99美元），因为个人计划虽然免月租，但每笔订单需额外支付0.99美元，且功能受限（如无法批量上传商品或获取数据报告）。若因节省费用降级为个人计划，后续可能影响运营效率，甚至触发审核问题。 提前准备合规账单以备审核：亚马逊在审核店铺时，常要求卖家提供账单以验证注册信息的真实性。常见的有效账单包括： 信用卡账单（用于法人信息验证） 水费、电费、网费、煤气费账单（任选其一，用于风险审核）。若营业执照注册地址无法提供账单，可在亚马逊后台填写实际经营地址，但需确保该地址能提供上述账单。因此，卖家应提前确认地址的账单获取情况，避免因无法提供账单导致审核失败。 亚马逊全球各大站点的优劣势分析 SHOW CONTENTS 亚马逊北美站：北美站涵盖美国、加拿大和墨西哥三个站点，支持“一键开通”。 美国站：流量庞大，竞争激烈，运营和推广成本较高，但语言门槛低且税务简单（无需缴税）。缺点是物流周期长、运费高。 加拿大站：流量较小，竞争较弱，但远程配送费较高，且跟卖现象严重（需品牌备案防范）。 墨西哥站：税务复杂，卖家需注册RFC税号（否则面临36%的高税率），退货率高，且存在西班牙语语言障碍。 亚马逊欧洲站 欧洲站竞争相对缓和，推广成本低于美国站，但面临语言障碍（如德语、法语等）。 FBA模式复杂：支持泛欧计划和 EFN 两种模式： 泛欧计划：商品自动分配至多国FBA仓库，但需在每个库存国注册VAT并报税。 EFN（欧洲配送网络）：商品仅需存放于某一国FBA仓库，可跨境配送至其他欧洲国家。 英国脱欧影响：英国需单独发货，且欧盟商标不再适用于英国，需额外注册英国商标。 税务负担重：需缴纳VAT增值税，注册和报税成本较高。 亚马逊日本站 日本站流量全球第二，物流时效快。 语言障碍（日语普及率低，中国卖家较少）。 商品差评率高，税费计算复杂。 面临本土电商平台（如乐天、雅虎）的激烈竞争。 亚马逊澳洲站：澳洲站流量低，数据支持工具匮乏，且 eBay 占据主导地位，亚马逊市场份额较小，物流和选品分析难度较大。 亚马逊新加坡站：新加坡站网购基数小，物流服务商有限，且面临Shopee和Lazada的强势竞争，亚马逊在该市场尚未占据优势地位。 亚马逊印度站 印度站入驻门槛高，需挂靠印度公司（中印合资或印资），且面临以下挑战： 高退货率，海关查验频繁，进口税率高。 商品认证复杂（如BIS、WPC等），审核严格。 单独使用中国公司营业执照无法开通印度站。 亚马逊开店要准备多少资金 亚马逊开店的基础费用 SHOW CONTENTS 在注册亚马逊店铺并正式运营第一款商品之前，卖家需要承担以下五个部分的基础费用：
公司注册及维护费用：在我国注册公司本身不收费，但需支付记账报税的费用。若未按时记账报税，公司可能被列入经营异常名录，进而影响亚马逊店铺的安全。此外，使用住宅地址注册公司需取得2/3以上居民的同意，因此多数新卖家选择地址挂靠（集群注册），费用约为每月100元（不同城市标准可能不同）。 店铺月租金：亚马逊美国站提供两种销售计划： 专业销售计划：每月固定支付39.99美元，适合长期运营的卖家。 个人销售计划：无月租，但每售出一件商品需支付0.99美元，适合试水或低销量卖家。 首批商品备货费用：亚马逊支持两种销售模式： FBM（自发货）：无需提前备货至亚马逊仓库，但物流时效长，转化率较低。 FBA（亚马逊配送）：需提前将商品发至亚马逊仓库，由亚马逊负责配送和售后，但卖家需承担头程运输费、库存资金压力等。新手卖家应避免选择高单价商品，以降低初期运营风险。 国内物流费用：大多数供应商（如1688）不提供包邮服务，卖家需支付商品从工厂到自家或指定地点的物流费用。部分卖家选择自行二次包装和贴标，因此需承担额外物流成本。建议优先选择提供免费包装和贴标的供应商，以节省费用。 头程运输费用：头程运输方式多样，以美国站为例： 海运（美森快船、盐田慢船）：价格最低，但运输时间最长（约20-40天）。 空运：价格适中，时效较快（约7-15天）。 国际快递（如DHL、FedEx）：价格最高，但最快（3-7天）。卖家需根据预算和时效需求选择合适的运输方式。 亚马逊开店的必备运营开支 SHOW CONTENTS 在亚马逊平台上销售商品涉及多项费用，主要包括以下几类：</description>
    </item>
    <item>
      <title>Red Hat Enterprise Linux</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/linux/1-red-hat-enterprise-linux/</link>
      <pubDate>Tue, 15 Apr 2025 11:03:32 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/linux/1-red-hat-enterprise-linux/</guid>
      <description>1. Introduction to Linux SHOW CONTENTS Open Source refers to software whose source code is freely available to the public for anyone to view, modify, and distribute. It encourages coolaboration, transparency, and community-driven improvements.
Open Source Licenses are legal agreements that define how software can be used, modified, and distributed. There are two main types of Copyleft and Permissive.
Copyleft licenses require that any modified versions of the software also be open source, under the same terms as the original.</description>
    </item>
    <item>
      <title>Docker</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/devops/docker/1-docker/</link>
      <pubDate>Mon, 14 Apr 2025 09:37:42 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/devops/docker/1-docker/</guid>
      <description>Introduction to Docker SHOW CONTENTS Docker was developed to address the challenges of software deployment across various environments by providing a lightweight, consistent, and portable solution. Prior to Docker, developers often faced issues like &amp;ldquo;it works on my machine, but not in production,&amp;rdquo; caused by inconsistencies in dependencies, libraries, and configurations. Docker resolves this by containerizing applications, ensuring they run uniformly across any infrastructure. Its primary goal is to simplify development, testing, and deployment by encapsulating applications and their dependencies into isolated, reproducible containers.</description>
    </item>
    <item>
      <title>Python Programming</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/python/1-python-programming/</link>
      <pubDate>Sat, 29 Mar 2025 16:46:34 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/python/1-python-programming/</guid>
      <description>Function Function arguments refer to data passed to the function. In python, there four main types of arguments: positional arguments, keyword arguments, default arguments, and variable length arguments.
Positional arguments are passed to a function in a specific order, and the values are assigned to parameters based on their position. Keyword arguments are passed to a function by explicitly specifying the parameter name. Any keyword arguments must be put after the last positional argument.</description>
    </item>
    <item>
      <title>Cisco Certified Networking Associate (CCNA)</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/computer-networking/1-ccna/</link>
      <pubDate>Sat, 15 Mar 2025 16:57:09 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/computer-networking/1-ccna/</guid>
      <description>1. Introduction to CCNA Exam Exam Topics CCNA Exam Topics Exam Instructions Cisco Exam Tutorial Question Types YOU CAN&amp;rsquo;T GO BACK AFTER ANSWERING OR SKIPPING A QUESTION.
CCNA Question Types Online Testing A PRIVATE and QUITE place for AT LEAST 2 HOURS must be needed.
Online Testing Cisco Packet Tracer Installation Cisco Packet Tracer Installation (Login First) Schduling and Taking the Exam Scheduling And Taking the Exam Exam Prep: Binary Game Binary Game 2.</description>
    </item>
    <item>
      <title>System Design</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/system-design/1-system-design/</link>
      <pubDate>Fri, 27 Dec 2024 04:32:42 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/system-design/1-system-design/</guid>
      <description>Introduction to System Design SHOW CONTENTS System Design is the process of defining the architecture, components, modules, interfaces, and data for a system to fulfill specific business requirements, while ensuring scalability, maintainability, and performance.
Load Balancing SHOW CONTENTS In System Design, Load Balancing refers to the practice of distributing incoming network traffic or workload across multiple servers or resources to optimize resource use and ensure high availability.
To fullly leverage scalability and redundency, load balancing can occur at different layers: between user and the web server, between web server and an internal platform serve, between internal platform server and database as illustrated in the following image:</description>
    </item>
    <item>
      <title>Database Management Systems</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/2-database-management-system/</link>
      <pubDate>Wed, 25 Dec 2024 10:20:09 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/2-database-management-system/</guid>
      <description>Introduction to DBMS A Database Management System (DBMS) is software that provides an interface for users to interact with databases. It enables the management, storage, and manipulation of data within databases. DBMS can be broadly classified into two main types: Relational DBMS and NoSQL DBMS.
In a Relational DBMS, data is stored in structured tables and is manipulated using SQL (Structured Query Language). Examples of relational DBMS inlcude MySQL, Oracle, and PostgreSQL.</description>
    </item>
    <item>
      <title>Development Manual</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/development-manual/1-development-manual/</link>
      <pubDate>Tue, 24 Dec 2024 16:03:23 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/development-manual/1-development-manual/</guid>
      <description>IDEA Postfix Completion SHOW CONTENTS Postfix completion allows writing code faster by adding expressions after a variable or value. It can be customized to suit specific coding needs.
&amp;#34;Hello&amp;#34;.var → String s = &amp;#34;Hello&amp;#34;; Live Templates SHOW CONTENTS Live Templates are predefined code snippets that can be inserted quickly using a shortcut. It can be customized to suit specific coding needs.
sout → System.out.println(); Keyboard Shortcuts SHOW CONTENTS Show Hint: Alt + Enter Show Parameter Info: Ctrl + P Surround with Selected Code Block: Ctrl + Alt + J Start a New Line: Shift + Enter Start a New Line Before Current: Ctrl + Alt + Enter Show Live Template: Ctrl + J Rename in Batch: Shift + F6 Extract Method: Ctrl + Alt + M Override Methods: Ctrl + O Implement Methods: Ctrl + I Optimize Imports: Ctrl + Alt + O View Source Code: Ctrl + N → Ctrl + F12 Go to Previous Edit Location: Ctrl + Alt + ← Go to Next Edit Location: Ctrl + Alt + → Show Inheritance Tree: Ctrl + H Show Quick Documentation: Ctrl + Q Show UML Diagram: Ctrl + Alt + U Go to Specified Line: Ctrl + G → Enter line number Go to Variable Definition: Ctrl + Alt + B Expand Code Block: Ctrl + Shift + + Collapse Code Block: Ctrl + Shift + - Debug Method Breakpoints SHOW CONTENTS Method breakpoints are a type of debugger breakpoint that pauses program execution when a specific method or function is entered or exited.</description>
    </item>
    <item>
      <title>Asynchronous Messaging</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</link>
      <pubDate>Fri, 20 Dec 2024 13:57:02 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</guid>
      <description>Synchronous Messaging VS. Asynchronous Messaging Synchronous Messaging and Asynchronous Messaging are two commnication paradigms used in distributed systems. In synchronous messaging, the sender will not continue executing until it receives the acknowledged message from the receiver. This paradigm is commonly used in situations that require immediate feedback to continue operations, such as payments or transaction processing.
The advantages of this paradigm include ease of implementation and usefulness in situations where immediate feedback is needed.</description>
    </item>
    <item>
      <title>Multithreading &amp; Concurrency</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</link>
      <pubDate>Wed, 11 Dec 2024 12:13:32 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</guid>
      <description>Introduction to Multithreading Program, Process, and Thread A program is a static set of instructions that stores on a disk. A process is an instance of a program that is currently being executed by the operating system. A thread is a small unit of process that can be scheduled and executed by the operating system. In simpler terms, a program is the code, a process is the excution of the code, a thread is a unit of execution within a process.</description>
    </item>
    <item>
      <title>Junit &amp; Mockito Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</link>
      <pubDate>Sat, 07 Dec 2024 01:26:33 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</guid>
      <description>JUnit assertEquals In JUnit, assertEquals is a method used to check if the expected value and the actual value are equal in unit tests.
SHOW CODE Java import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class UnitTest { @Test void addition() { Calculator calculator = new Calculator(); int result = calculator.add(1, 1); assertEquals(2, result, &#34;The result of 1 + 1 should be 2&#34;); } } assertTure &amp;amp; assertFalse In JUnit, the assertTrue and the assertFalse methods are used to validate boolean expressions in unit tests.</description>
    </item>
    <item>
      <title>Coding Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/2-coding-patterns/</link>
      <pubDate>Mon, 02 Dec 2024 10:15:04 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/2-coding-patterns/</guid>
      <description>Simple Two Pointers The Simple Two Pointers technique is commonly used to solve problems involving sorted array, where a set of elements needs to be found that satisfy certain constrains. This approach is efficient in scenarios such as finding a pair that sums to a target or reversing an array or string. In the two simple two pointers technique, two pointers &amp;ndash; typically labeled &amp;ldquo;left&amp;rdquo; and &amp;ldquo;right&amp;rdquo; &amp;ndash; are initialized and move in a specific direction based on the problem&amp;rsquo;s requirements.</description>
    </item>
    <item>
      <title>Database Design</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-design/</link>
      <pubDate>Fri, 22 Nov 2024 21:07:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/1-database-design/</guid>
      <description>Introduction to Databases A database is a collection of data that is stored, managed, and accessed electronically. It typically contains one or more tables, which resemble Excel or Google sheets, with data organized into rows and columns. As the number of tables grows, managing the database can become complex, making it essential to design a scalable and maintainable strucutre.
Databases can be broadly categorized into two types: Relational database, primarily used for real-time data updates and transactions, and data warehouse, optimized for data analysis and reporting purposes.</description>
    </item>
    <item>
      <title>Photography</title>
      <link>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</link>
      <pubDate>Mon, 18 Nov 2024 20:37:01 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/arts/photography/1-photography-notes/</guid>
      <description>Exposure in Photography Exposure SHOW CONTENTS Exposure refers to the light that reaches the camera&amp;rsquo;s sensor to create an image. It is controlled by three fundamental settings known as the Exposure Triangle: Aperture, Shutter Speed, and ISO.
Aperture SHOW CONTENTS The aperture (f-stop) is the opening in the camera lens that controls how much light enters. A wider aperture (e.g., f/2.8) allows more light to pass through, brightening the image and creating a shallow depth of field, which results in a blurry background.</description>
    </item>
    <item>
      <title>Spring</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</link>
      <pubDate>Mon, 18 Nov 2024 15:44:50 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</guid>
      <description>Core Concepts Loose Coupling Loose Coupling is a design principle that aims to reduce the dependencies between components within a system.
Inversion of Control (IoC) Inversion of Control is a design principle where the control of object creation and lifecycle management is transferred from the application code to an external container or framework.
Dependency Injection (DI) Dependency Injection is a design pattern commonly used in object-oriented programming, where the dependecies of a class are provided externally rather than being created within the class itself.</description>
    </item>
    <item>
      <title>Data Structure &amp; Algorithms</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/1-data-structure-and-algorithms/</link>
      <pubDate>Thu, 14 Nov 2024 20:29:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/1-data-structure-and-algorithms/</guid>
      <description>Recursion Recursion is a programming technique where a function repeatedly calls itself until it reaches a base case, whcih stops the recursion and allows it to return a result. It is a way of breaking down complex problems into smaller, simpler subproblems that are eaiser to solve.
Head Recursion Head Recursion is a type of recursion where a function makes its recursive call first, immediately after checking the base case, and performs all other operations only after the recursive call returns.</description>
    </item>
    <item>
      <title>Design Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</link>
      <pubDate>Tue, 12 Nov 2024 14:38:17 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</guid>
      <description>1. Solid Principle 1.1 Single Responsibility Principle A class should have only one reason to change, meaning each class should focus on a single functionality or responsibility.
SHOW CODE Single Responsibility Principle import java.io.IOException; import java.util.*; import java.util.regex.*; import com.fasterxml.jackson.databind.ObjectMapper; /** * 1. User class is only used to represent entity. * 2. UserValidator class is solely responsible for validating user objects. * 3. Store class is only used to manage user objects storage.</description>
    </item>
    <item>
      <title>Java Programming</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming/</link>
      <pubDate>Fri, 08 Nov 2024 11:36:53 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming/</guid>
      <description>Enum In Java, an enum (short for &amp;ldquo;enumeration&amp;rdquo;) is used to define a collection of constants, such as days of the week or months of the year. An enum provides a type-safe way to handle constant values, and it can be used in a switch statement or for comparison using ==. Compared to a final constant in Java, an enum can contain fields, methods, and constructors. The values() method is used to retrive all the constants in an enum, and the valueOf() method is used to convert a string into an enum constant.</description>
    </item>
  </channel>
</rss>
