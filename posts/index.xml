<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Signal&#39;s Blog</title>
    <link>https://signalyu.github.io/posts/</link>
    <description>Recent content in Posts on Signal&#39;s Blog</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>EN</language>
    <lastBuildDate>Wed, 01 Jan 2025 08:08:19 +0800</lastBuildDate>
    <atom:link href="https://signalyu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Design Patterns</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</link>
      <pubDate>Sun, 12 Nov 2023 14:38:17 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/design-patterns/1-design-patterns/</guid>
      <description>1. Solid Principle 1.1 Single Responsibility Principle A class should have only one reason to change, meaning each class should focus on a single functionality or responsibility.
SHOW CODE Single Responsibility Principle import java.io.IOException; import java.util.*; import java.util.regex.*; import com.fasterxml.jackson.databind.ObjectMapper; /** * 1. User class is only used to represent entity. * 2. UserValidator class is solely responsible for validating user objects. * 3. Store class is only used to manage user objects storage.</description>
    </item>
    <item>
      <title>Coding Patterns for Interview Questions</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/patterns/1-coding-patterns-for-interview-questions/</link>
      <pubDate>Fri, 02 Dec 2022 10:15:04 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/patterns/1-coding-patterns-for-interview-questions/</guid>
      <description>Simple Two Pointers The Simple Two Pointers technique is commonly used to solve problems involving sorted array, where a set of elements needs to be found that satisfy certain constrains. This approach is efficient in scenarios such as finding a pair that sums to a target or reversing an array or string. In the two simple two pointers technique, two pointers &amp;ndash; typically labeled &amp;ldquo;left&amp;rdquo; and &amp;ldquo;right&amp;rdquo; &amp;ndash; are initialized and move in a specific direction based on the problem&amp;rsquo;s requirements.</description>
    </item>
    <item>
      <title>Database Design</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/database-design/1-database-design/</link>
      <pubDate>Wed, 22 May 2024 21:07:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/database-design/1-database-design/</guid>
      <description>Introduction to Databases A database is a collection of data that is stored, managed, and accessed electronically. It typically contains one or more tables, which resemble Excel or Google sheets, with data organized into rows and columns. As the number of tables grows, managing the database can become complex, making it essential to design a scalable and maintainable strucutre.
Databases can be broadly categorized into two types: Relational database, primarily used for real-time data updates and transactions, and data warehouse, optimized for data analysis and reporting purposes.</description>
    </item>
    <item>
      <title>Data Structure &amp; Algorithms</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/algorithms/1-data-structure-and-algorithms/</link>
      <pubDate>Fri, 14 Oct 2022 20:29:21 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/data-structures-and-algorithms/algorithms/1-data-structure-and-algorithms/</guid>
      <description>Recursion Recursion is a programming technique where a function repeatedly calls itself until it reaches a base case, whcih stops the recursion and allows it to return a result. It is a way of breaking down complex problems into smaller, simpler subproblems that are eaiser to solve.
Head Recursion Head Recursion is a type of recursion where a function makes its recursive call first, immediately after checking the base case, and performs all other operations only after the recursive call returns.</description>
    </item>
    <item>
      <title>Junit &amp; Mockito Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</link>
      <pubDate>Thu, 07 Jul 2022 01:26:33 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/unit-testing/1-junit-and-mockito-notes/</guid>
      <description>JUnit assertEquals In JUnit, assertEquals is a method used to check if the expected value and the actual value are equal in unit tests.
SHOW CODE Java import org.junit.jupiter.api.Test; import static org.junit.jupiter.api.Assertions.assertEquals; public class UnitTest { @Test void addition() { Calculator calculator = new Calculator(); int result = calculator.add(1, 1); assertEquals(2, result, &#34;The result of 1 + 1 should be 2&#34;); } } assertTure &amp;amp; assertFalse In JUnit, the assertTrue and the assertFalse methods are used to validate boolean expressions in unit tests.</description>
    </item>
    <item>
      <title>Database Management Systems</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/database-management-system/1-database-management-system/</link>
      <pubDate>Wed, 25 Dec 2024 10:20:09 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/database/database-management-system/1-database-management-system/</guid>
      <description>Introduction to DBMS A Database Management System (DBMS) is software that provides an interface for users to interact with databases. It enables the management, storage, and manipulation of data within databases. DBMS can be broadly classified into two main types: Relational DBMS and NoSQL DBMS.
In a Relational DBMS, data is stored in structured tables and is manipulated using SQL (Structured Query Language). Examples of relational DBMS inlcude MySQL, Oracle, and PostgreSQL.</description>
    </item>
    <item>
      <title>Learning English With Podcasts</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/listening/english/1-learning-english-with-podcasts/</link>
      <pubDate>Wed, 01 Jan 2025 08:08:19 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/listening/english/1-learning-english-with-podcasts/</guid>
      <description>1. Order Food in Restaurant https://youtu.be/_izDbJ45Q5I SHOW NOTES I&#39;m still working on it. This sentence expresses that an action is ongoing and not yet completed. It also suggests that more time is needed to finish it. Did you finish reading? — I&amp;rsquo;m still working on it. Did you fix my car? — I&amp;rsquo;m still working on it. Coke and Fries This refers to a popular combination of fast food: Coca-cola and French Fries.</description>
    </item>
    <item>
      <title>Idea &amp; Maven &amp; Postman Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/tools/1-idea-maven-postman-notes/</link>
      <pubDate>Tue, 24 Dec 2024 16:03:23 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/tools/1-idea-maven-postman-notes/</guid>
      <description>IDEA Maven Introduction to Maven Maven is a build automation and project management tool primarily used for Java projects. It follows the concept of Project Object Model (POM), which is defined in an XML file (pom.xml) at the root of the project.
settings.xml Configuration ./ ├── bin/ │ ├── m2.conf │ ├── mvn* │ ├── mvn.cmd │ ├── mvnDebug* │ ├── mvnDebug.cmd │ └── mvnyjp* ├── boot/ │ ├── plexus-classworlds-2.7.0.jar │ └── plexus-classworlds.</description>
    </item>
    <item>
      <title>English Speaking: IELTS (1-100)</title>
      <link>https://signalyu.github.io/posts/3-humanities/languages/speaking/english/2-english-speaking-ielts-1-100/</link>
      <pubDate>Sun, 15 Dec 2024 09:04:13 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/3-humanities/languages/speaking/english/2-english-speaking-ielts-1-100/</guid>
      <description>1-10 1. Do you work or do you study? I currently working. I finished my studies four years ago. So I&amp;rsquo;m currently working as a software engineer.
2. Where do you currently work? I currently work in Shenzhen. I came in Shenzhen two years ago. I worked previously in Guangzhou where I completed my education.
3. Why did you choose that carrer? Well, actually. I have a bachelor&amp;rsquo;s degree in economics.</description>
    </item>
    <item>
      <title>Multithreading &amp; Concurrency</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</link>
      <pubDate>Wed, 11 Dec 2024 12:13:32 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/multithreading-and-concurrency/1-multithreading-and-concurrency/</guid>
      <description>Introduction to Multithreading Program, Process, and Thread A program is a static set of instructions that stores on a disk. A process is an instance of a program that is currently being executed by the operating system. A thread is a small unit of process that can be scheduled and executed by the operating system. In simpler terms, a program is the code, a process is the excution of the code, a thread is a unit of execution within a process.</description>
    </item>
    <item>
      <title>Asynchronous Messaging</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</link>
      <pubDate>Mon, 20 Nov 2023 13:57:02 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/asynchronous-messaging/1-asynchronous-messaging/</guid>
      <description>Synchronous Messaging VS. Asynchronous Messaging Synchronous Messaging and Asynchronous Messaging are two commnucation paradigms used in distributed systems. In synchronous messaging, the sender will not continue executing until it receives the acknowledged message from the receiver. This paradigm is commonly used in situations that require immediate feedback to continue operations, such as parments or transaction processing.
The advantages of this paradigm include ease of implementation and usefulness in situations where immediate feedback is needed.</description>
    </item>
    <item>
      <title>React Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/front-end/react/1-react-notes/</link>
      <pubDate>Sun, 19 Jun 2022 20:58:33 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/front-end/react/1-react-notes/</guid>
      <description>JSX JSX (JavaScript XML) is a syntax extension for JavaScript commonly used in React to describe what the UI should look like.
SHOW CODE React import &#39;./App.css&#39; const welcome = { greeting: &#39;Hey&#39;, title: &#39;React&#39; }; function getName(name) { return name; } function App() { return ( &amp;lt;div&amp;gt; &amp;lt;h1&amp;gt;{welcome.greeting} {welcome.title}!&amp;lt;/h1&amp;gt; &amp;lt;h1&amp;gt;I am {getName(&#39;Signal&#39;)}!&amp;lt;/h1&amp;gt; &amp;lt;label htmlFor=&amp;quot;search&amp;quot;&amp;gt;Search: &amp;lt;/label&amp;gt; &amp;lt;input id=&amp;quot;search&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;/input&amp;gt; &amp;lt;/div&amp;gt; ) } export default App List Rendering Rendering a List in React is a common task when dealing with dynamic or repeated data.</description>
    </item>
    <item>
      <title>Spring Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</link>
      <pubDate>Thu, 18 Nov 2021 15:44:50 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/backend/spring/1-spring-notes/</guid>
      <description>Core Concepts Loose Coupling Loose Coupling is a design principle that aims to reduce the dependencies between components within a system.
Inversion of Control (IoC) Inversion of Control is a design principle where the control of object creation and lifecycle management is transferred from the application code to an external container or framework.
Dependency Injection (DI) Dependency Injection is a design pattern commonly used in object-oriented programming, where the dependecies of a class are provided externally rather than being created within the class itself.</description>
    </item>
    <item>
      <title>Vue Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/front-end/vue/1-vue-notes/</link>
      <pubDate>Tue, 16 Nov 2021 20:53:48 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/framework-and-tools/framework/front-end/vue/1-vue-notes/</guid>
      <description>Virtual DOM A Virtual DOM is a lightweight, in-memory representation of the real DOM. Each Node in the Virtual DOM is represented as a plain JavaScript object with properties describing the element, its attributes, and its children. The Virtual DOM will be updated whenever an application&amp;rsquo;s state changes. It minimizes real DOM updates by batching changes and applying them through an optimized process. --- title: Virtual DOM --- graph TD B[&#34;</description>
    </item>
    <item>
      <title>Java Programming Notes</title>
      <link>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming-notes/</link>
      <pubDate>Mon, 08 Nov 2021 11:36:53 +0800</pubDate>
      <guid>https://signalyu.github.io/posts/4-engineering-and-technology/computer-science/programming/java/1-java-programming-notes/</guid>
      <description>Enum In Java, an enum (short for &amp;ldquo;enumeration&amp;rdquo;) is used to define a collection of constants, such as days of the week or months of the year. An enum provides a type-safe way to handle constant values, and it can be used in a switch statement or for comparison using ==. Compared to a final constant in Java, an enum can contain fields, methods, and constructors. The values() method is used to retrive all the constants in an enum, and the valueOf() method is used to convert a string into an enum constant.</description>
    </item>
  </channel>
</rss>
